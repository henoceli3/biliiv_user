import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import {
  Box,
  Button,
  Center,
  Flex,
  FormControl,
  FormHelperText,
  FormLabel,
  Input,
  InputGroup,
  InputRightElement,
  Text,
} from "@chakra-ui/react";
import React, { useState } from "react";
import { useRouter } from "next/router";
import axios from "axios";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [show, setShow] = React.useState(false);
  const handleClick = () => setShow(!show);

  const [err, setError] = useState("");
  const [data, setData] = useState({
    telephone: "",
    mdp: "",
  });
  const { telephone, mdp } = data;
  const changeHandler = (e) => {
    setData({ ...data, [e.target.name]: e.target.value });
    setError("");
  };
  let navigate = useRouter();

  let userId;
  const routeChange = () => {
    let path = `/components/HomeUser/?id=${userId}`;
    navigate.push(path);
  };

  const Login = (e) => {
    // e.preventDefault();
    axios
      .post("https://user-api-pearl.vercel.app/api/login", data, {
        headers: {
          "Content-Type": "application/json",
        },
      })
      .then((response) => {
        console.log(response);
        userId = response.data.data.id;
        localStorage.setItem("token", response.data.token);
        routeChange();
      })
      .catch((error) => {
        // Si la connexion a échoué, affichez un message d'erreur à l'utilisateur
        setError(error.response.data.message);
        console.log(error);
      });
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Center w={"100%"} h={"100vh"} bg={"blue.200"}>
        <Flex
          w={{ base: "90%", xl: "50%" }}
          h={{ base: "70%", xl: "50%" }}
          bg={"white"}
        >
          <Box
            w={"50%"}
            h={"100%"}
            display={{ base: "none", xl: "flex" }}
            bg={"yellow.100"}
          ></Box>
          <Center
            w={{ base: "100%", xl: "50%" }}
            h={"100%"}
            flexDirection={"column"}
          >
            <Center w={"90%"} h={"90%"} flexDirection={"column"}>
              <Text fontWeight={"bold"} mb={"1em"} fontSize={"2em"}>
                Connexion
              </Text>
              <InputGroup size="md">
                <Input
                  pr="4.5rem"
                  type={"number"}
                  placeholder="Votre numero"
                  mb={"2em"}
                  name="telephone"
                  value={telephone}
                  onChange={changeHandler}
                />
              </InputGroup>
              <InputGroup size="md">
                <Input
                  pr="4.5rem"
                  type={show ? "text" : "password"}
                  placeholder="Votre mot de passe"
                  name="mdp"
                  value={mdp}
                  onChange={changeHandler}
                />
                <InputRightElement width="4.5rem">
                  <Button h="1.75rem" size="sm" onClick={handleClick}>
                    {show ? "caché" : "voire"}
                  </Button>
                </InputRightElement>
              </InputGroup>
              <Button
                colorScheme="blue"
                variant="solid"
                mt={"2em"}
                w={"100%"}
                onClick={() => {
                  Login();
                }}
              >
                Connexion
              </Button>
            </Center>
          </Center>
        </Flex>
      </Center>
    </>
  );
}
